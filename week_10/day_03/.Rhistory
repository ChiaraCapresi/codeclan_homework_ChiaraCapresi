library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
housing_prices <- read_csv("data/kc_house_data.csv")
housing_prices
glimpse(housing_prices)
skimr::skim(housing_prices)
housing_prices %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
housing_prices_trim <- housing_prices %>%
select(-c("date", "id", "sqft_living15", "sqft_lot15", "zipcode", "sqft_above", "sqft_basement"))
housing_prices_trim
housing_prices %>%
distinct(waterfront)
library(tidyverse)
library(fastDummies) # making dummy variables
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
grades <- read_csv("supervised_vs_unsupervised/data/grades.csv")
grades
summary(grades)
grades %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
grades %>%
mutate(final = coalesce(final, mean(final, na.rm = TRUE)),
take_home, mean(take_home, na.rm = TRUE))
grades <- grades %>%
mutate(across(where(is.numeric), ~ coalesce(., mean(., na.rm = TRUE))))
grades
skimr::skim(grades)
grades %>%
#select(subject) %>% # for demo purposes
mutate(subject_bio = as.integer(subject == 'biology'),
subject_eng = as.integer(subject == 'english'),
subject_fre = as.integer(subject == 'french'),
subject_math = as.integer(subject == 'maths'),
subject_phy = as.integer(subject == 'physics')
) %>%
select(-subject_bio, -subject)
grades_subject_dummy2 <- grades %>%
fastDummies::dummy_cols(select_columns = 'subject',
remove_selected_columns = TRUE, # we remove the 'subject' column!
remove_first_dummy = TRUE) # remove the column 'subject_biology'
grades_subject_dummy2 %>%
mutate(final_grade = case_when(
final < 50 ~ "FAIL",
final < 60 ~ "C",
final < 70 ~ "B",
final >= 70 ~ "A"
), .after = final)
grades %>%
mutate(final_grade = case_when(final >= 70 ~ "A",
final >= 60 ~ "B",
final >= 50 ~ "C",
final < 50 ~ "F",
)) %>%
fastDummies::dummy_cols(select_columns = "final_grade",
remove_selected_columns = TRUE,
remove_first_dummy = FALSE
) %>%
select(-final_grade_F)
grades2 <- grades %>%
mutate(subject2 = as.factor(subject), .after = subject,
subject3 = relevel(subject2, 'english'))
lm4 <- lm(final ~ assignment + subject2, grades2)
lm5 <- lm(final ~ assignment + subject3, grades2)
summary(lm4)
summary(lm5)
fastDummies::dummy_columns(grades, remove_first_dummy = FALSE)
CodeClanData::tyrell_corp_jobs %>%
ggplot(aes(Salary, fill = Position))+
geom_histogram(position = "dodge")
CodeClanData::tyrell_corp_jobs %>%
mutate(salary = scale(Salary), .by = Position) #calculate the SD with respect of the Position
assignment_mean <- mean(grades$assignment)
assignment_sd <- sd(grades$assignment)
ass_sc <- grades %>%
select(assignment) %>%
mutate(assignment_scaled = (assignment - assignment_mean)/assignment_sd)
ass_sc
ass_sc %>%
ggplot(aes(assignment))+
geom_density()+
geom_vline(xintercept = assignment_mean, size = 1, colour = 2)+
labs(title = "Raw data")
ass_sc %>%
ggplot(aes(assignment_scaled))+
geom_density()+
geom_vline(xintercept = mean(ass_sc$assignment_scaled), size = 1, colour = 2)+
labs(title = "Raw data")
grades %>%
select(assignment) %>%
mutate(sc_ass_TT = scale(assignment),
sc_ass_FT = scale(assignment, scale = F, center = T),
sc_ass_TF = scale(assignment, scale = T, center = F))
# comes from mosaic Data package
RailTrail
railtrail_clean <- RailTrail %>%
clean_names() %>%
mutate(across(spring:fall, as.logical))
railtrail_clean
railtrail_trim <- railtrail_clean %>%
select(-c(hightemp, lowtemp, fall, day_type))
mod1 <- lm(volume ~ ., railtrail_clean)
alias(mod1)
# GGally
ggpairs(railtrail_trim, progress = FALSE)
railtrail_trim %>%
ggplot(aes(x = avgtemp, y = volume))+
geom_point()+
geom_smooth(method = 'lm') #method = 'lm', se = FALSE if you don't want  grey strip
mod1 <- lm(volume ~ avgtemp, railtrail_trim)
autoplot(mod1)+
theme_minimal()
hist(mod1$residuals)
summary(mod1)
fivenum(mod1$residuals)
sd(mod1$residuals)
railtrail_trim %>%
ggplot(aes(y = volume))+
geom_boxplot()
railtrail_trim %>%
ggplot(aes(x = weekday, y = volume)) +
geom_boxplot()
summarise(railtrail_trim, cor = cor(weekday, volume))
mod2 <- lm(volume ~ avgtemp + weekday, railtrail_trim)
autoplot(mod1) + theme_minimal()
autoplot(mod2) + theme_minimal()
summary(mod2)
summary(mod2)
coefficients(mod2)
# mosaic package
plotModel(mod2)
mod3 <- lm(volume ~ avgtemp + weekday + summer, railtrail_trim)
autoplot(mod3)
plotModel(mod3)
summary(mod3)
pnorm
qnorm
pt(3.898, 86, lower.tail = FALSE)*2 # 86 degrees of freedom
mod1
ggplot(railtrail_trim, aes(avgtemp, volume))+
geom_point()+
geom_smooth(method = 'lm', se = FALSE)+
geom_point(x = mean(railtrail_trim$avgtemp),
y = mean(railtrail_trim$volume),
colour = 2, size = 4)+
geom_point(x = 50, y = 99.602 + 4.802 * 50,
colour = 4, size = 4)
ggplot(railtrail_trim, aes(avgtemp, volume, colour = weekday))+
geom_point()+
geom_smooth(method = 'lm', se = FALSE)+
geom_point(x = mean(railtrail_trim$avgtemp),
y = mean(railtrail_trim$volume),
colour = 2, size = 4)+
geom_point(x = 50, y = 99.602 + 4.802 * 50,
colour = 4, size = 4)
mod2
#Call:
#lm(formula = volume ~ avgtemp + weekday, data = railtrail_trim)
#Coefficients:
#(Intercept)      avgtemp  weekdayTRUE
#    163.022        4.541      -70.320
if x = 40
railtrail_trim
housing_prices_trim %>%
mutate(waterfront = as.logical(waterfront))
housing_prices_trim <- housing_prices_trim %>%
mutate(waterfront = as.logical(waterfront))
housing_prices_trim %>%
summarise(is.na(yr_renovated))
housing_prices_trim %>%
summarise(sum(is.na(yr_renovated)))
housing_prices_trim %>%
distinct(yr_renovated)
housing_prices_trim %>%
filter(yr_renovated == 0)
housing_prices_trim %>%
mutate(renovated = if_else(yr_renovated == 0, FALSE, TRUE))
housing_prices_trim <- housing_prices_trim %>%
mutate(renovated = if_else(yr_renovated == 0, FALSE, TRUE))
Prestige
library(tidyverse)
library(car)
library(modelr)
library(GGally)
library(ggfortify)
data(Prestige)
prestige <- Prestige
glimpse(Prestige)
housing_prices_trim %>%
mutate(grade_slot = case_when(
grade >=1 & grade <= 3 ~ "low quality",
grade >3 & grade <= 7 ~ "medium quality",
grade > 7 ~ "high quality"
))
housing_prices_trim %>%
mutate(grade_slot = as.factor(case_when(
grade >=1 & grade <= 3 ~ "low quality",
grade >3 & grade <= 7 ~ "medium quality",
grade > 7 ~ "high quality"
)))
housing_prices_trim %>%
mutate(grade_slot = as.factor(case_when(
grade >=1 & grade <= 3 ~ "low quality",
grade >3 & grade <= 7 ~ "medium quality",
grade > 7 ~ "high quality"
))) %>%
mutate(across(.col = c("view", "condition"), .fns = ~as.factor(.x)))
housing_prices_trim <- housing_prices_trim %>%
mutate(grade_slot = as.factor(case_when(
grade >=1 & grade <= 3 ~ "low quality",
grade >3 & grade <= 7 ~ "medium quality",
grade > 7 ~ "high quality"
))) %>%
mutate(across(.col = c("view", "condition"), .fns = ~as.factor(.x)))
alias(price ~., housing_prices_trim)
housing_prices_trim
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
housing_prices_trim$price
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric)
ggpairs(houses_tidy_nonnumeric)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
housing_prices_trim %>%
select_if(price, function(x) !is.numeric(x))
housing_prices_trim
housing_prices_trim %>%
select_if(function(x) !is.numeric(x) & price)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
bind_cols(houses_tidy_nonnumeric, housing_prices_trim$price)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
bind_cols(houses_tidy_nonnumeric, housing_prices_trim$price)
houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
#houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
remove(houses_tidy_nonnumeric)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
bind_cols(houses_tidy_nonnumeric, housing_prices_trim$price)
#houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
housing_prices <- read_csv("data/kc_house_data.csv")
housing_prices
glimpse(housing_prices)
skimr::skim(housing_prices)
housing_prices %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
housing_prices_trim <- housing_prices %>%
select(-c("date", "id", "sqft_living15", "sqft_lot15", "zipcode", "sqft_above", "sqft_basement"))
housing_prices_trim
housing_prices_trim <- housing_prices_trim %>%
mutate(waterfront = as.logical(waterfront))
housing_prices_trim <- housing_prices_trim %>%
mutate(renovated = if_else(yr_renovated == 0, FALSE, TRUE))
housing_prices_trim <- housing_prices_trim %>%
mutate(grade_slot = as.factor(case_when(
grade >=1 & grade <= 3 ~ "low quality",
grade >3 & grade <= 7 ~ "medium quality",
grade > 7 ~ "high quality"
))) %>%
mutate(across(.col = c("view", "condition"), .fns = ~as.factor(.x)))
alias(price ~., housing_prices_trim)
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
houses_tidy_nonnumeric
houses_tidy_numeric <- housing_prices_trim %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- housing_prices_trim %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric <- houses_tidy_nonnumeric$price <- housing_prices_trim$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
