library(tidyverse)
project <- read_csv("data/project_management.csv")
View(project)
library(janitor)
clean_names()
project <- read_csv("data/project_management.csv") %>%
clean_names()
View(project)
glimpse(project)
project %>%
ggplot()+
aes(x = estimated_length, y = actual_length)+
geom_point()
library(tidyverse)
library(janitor)
mtcars %>%
select(wt, mpg) %>%
glimpse()
mtcars %>%
ggplot(aes(x = wt, y = mpg)) +
geom_point()
noisy_bivariate <- function(noise = 1, gradient = 1){
x <- runif(n = 200, min = 0, max = 10)
y <- gradient * x + 10
y_scatter <- noise * 4 * rnorm(n = 200)
y <- y + y_scatter
data = tibble(x, y)
r <- round(cor(x, y), 4)
title <- paste(
"noise = ", noise,
", gradient = ", gradient,
", r = ", r
)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
xlim(0, 10) +
ylim(min(c(min(y), 0)), max(c(max(y), 10))) +
ggtitle(title)
}
noisy_bivariate(noise = 0.5, gradient = 1)
mtcars %>%
summarise(correlation = cor(wt, mpg))
#other of variables in 'cor()' doesn't matter
mtcars %>%
summarise(correlation = cor(mpg, wt))
project %>%
summarise(correlation = cor(estimated_length, actual_length))
model <- lm(formula = actual_length ~ estimated_length, data = project)
model
project <- project %>%
add_predictions(model) %>%
addresiduals(model)
project <- project %>%
add_predictions(model) %>%
add_residuals(model)
library(modelr)
project <- project %>%
add_predictions(model) %>%
add_residuals(model)
project
project <- project %>%
select(-x1) %>%
add_predictions(model) %>%
add_residuals(model)
project
project %>%
ggplot(aes(x = estimated_length))+
geom_point(aes(y = actual_length))+
geom_line(eas(y = pred), colour = "red")
project %>%
ggplot(aes(x = estimated_length))+
geom_point(aes(y = actual_length))+
geom_line(aes(y = pred), colour = "red")
sample %>%
ggplot(aes(x = estimated_length, y = actual_length)) +
geom_point() +
geom_abline(
intercept = model$coefficients[1],
slope = model$coefficients[2],
col = "red"
)
project %>%
ggplot(aes(x = estimated_length, y = actual_length)) +
geom_point() +
geom_abline(
intercept = model$coefficients[1],
slope = model$coefficients[2],
col = "red"
)
glance_output <- clean_names(glance(model))
library(broom)
glance_output <- clean_names(glance(model))
glance_output
glance_output <- clean_names(glance(model))
glance_output
glance_output$r_squared
glance_output <- clean_names(glance(model))
glance_output
model$coefficients[1]
model$coefficients[2]
glance_output$r_squared
glance_output <- clean_names(glance(model))
glance_output
model$coefficients[1]
model$coefficients[2]
glance_output$r_squared
tidy_output <- clean_names(tidy(model))
tidy_output
autoplot(model)
library(ggfortify)
autoplot(model)
library(tidyverse)
library(janitor)
library(modelr)
library(broom)
library(ggfortify)
project <- read_csv("data/project_management.csv") %>%
clean_names()
glimpse(project)
project %>%
ggplot()+
aes(x = estimated_length, y = actual_length)+
geom_point()
project %>%
summarise(correlation = cor(estimated_length, actual_length))
model <- lm(formula = actual_length ~ estimated_length, data = project)
model
project <- project %>%
select(-x1) %>%
add_predictions(model) %>%
add_residuals(model)
project
project %>%
ggplot(aes(x = estimated_length))+
geom_point(aes(y = actual_length))+
geom_line(aes(y = pred), colour = "red")
project %>%
ggplot(aes(x = estimated_length, y = actual_length)) +
geom_point() +
geom_abline(
intercept = model$coefficients[1],
slope = model$coefficients[2],
col = "red"
)
glance_output <- clean_names(glance(model))
glance_output
model$coefficients[1]
model$coefficients[2]
glance_output$r_squared
autoplot(model)
tidy_output <- clean_names(tidy(model))
tidy_output
summary(model)
plot(model)
par(mfrow = c(2,3))
plot(model)
histogram(model$residuals)
par(mfrow = c(2,3))
plot(model)
histogram(model$residuals)
model
par(mfrow = c(2,3))
plot(model)
histogram(model$residual)
histogram(model$resid)
par(mfrow = c(2,3))
plot(model)
histogram(model$residuals)
par(mfrow = c(2,3))
plot(model)
hist(model$residuals)
plot(model, which = 5)
project <- add_case(project, actual_length = 30000, estimated_length = 50)
model_1 <- lm(formula = actual_length ~ estimated_length, data = project)
plot(model_1, which = c(2, 3, 5))
project <- add_case(project, actual_length = 300, estimated_length = 50)
project <- add_case(project, actual_length = 300, estimated_length = 50)
model_1 <- lm(formula = actual_length ~ estimated_length, data = project)
plot(model_1, which = c(2, 3, 5))
project <- add_case(project, actual_length = 3000, estimated_length = 100)
model_1 <- lm(formula = actual_length ~ estimated_length, data = project)
plot(model_1, which = c(2, 3, 5))
