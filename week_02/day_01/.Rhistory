library(tidyverse)
read_csv("data/CardBase.csv")
read_csv("data/CustomerBase.csv")
read_csv("data/exam_scores.csv")
read_csv("data/FraudBase.csv")
read_csv("data/hat_observations.csv")
read_csv("data/TransactionBase.csv")
x <- read_csv("data/CardBase.csv")
read_csv("data/CustomerBase.csv")
read_csv("data/exam_scores.csv")
read_csv("data/FraudBase.csv")
read_csv("data/hat_observations.csv")
read_csv("data/TransactionBase.csv")
x <- read_csv("data/CardBase.csv")
read_csv("data/CustomerBase.csv")
read_csv("data/exam_scores.csv")
read_csv("data/FraudBase.csv")
read_csv("data/hat_observations.csv")
read_csv("data/TransactionBase.csv")
view(x)
cards <- read_csv("data/CardBase.csv")
customers <- read_csv("data/CustomerBase.csv")
#read_csv("data/exam_scores.csv")
frauds <- read_csv("data/FraudBase.csv")
#read_csv("data/hat_observations.csv")
transactions <- read_csv("data/TransactionBase.csv")
view(cards)
view(customers)
view(frauds)
view(transactions)
library(janitor)
clean_names(cards)
cards <- read_csv("data/CardBase.csv")
customers <- read_csv("data/CustomerBase.csv")
#read_csv("data/exam_scores.csv")
frauds <- read_csv("data/FraudBase.csv")
#read_csv("data/hat_observations.csv")
transactions <- read_csv("data/TransactionBase.csv")
cards <- clean_names(cards)
customers <- clean_names(customers)
frauds <- clear_names(frauds)
library(janitor)
library(janitor)
cards <- clean_names(cards)
customers <- clean_names(customers)
frauds <- clear_names(frauds)
cards <- clean_names(cards)
customers <- clean_names(customers)
#frauds <- clear_names(frauds)
transactions <- clean_names(transactions)
cards <- clean_names(cards)
customers <- clean_names(customers)
#frauds <- clear_names(frauds)
transactions <- clean_names(transactions)
view(cards)
view(customers)
view(frauds)
view(transactions)
cards <- clean_names(cards)
customers <- clean_names(customers)
frauds <- clean_names(frauds)
transactions <- clean_names(transactions)
view(cards)
view(customers)
view(frauds)
view(transactions)
left_join(cards, customers, by = "cust_id")
inner_join(frauds, transactions, by = "transaction_id")
full_join(frauds, transactions, by = "transaction_id")
full_join(frauds, transactions, by = "transaction_id")
semi_join(cards, transactions, by = c("card_number" = "credit_card_id"))
hat_observations <- read_csv("data/hat_observations.csv")
view(hat_observations)
hat_observations %>%
separate(observation,
c("hat_colour", "hat_type"),
sep =",")
hat_obs_tidy <- hat_observations %>%
separate(observation,
c("hat_colour", "hat_type"),
sep =",")
hat_obs_tidy
hat_obs_tidy %>%
unite(date,
c("day", "month", "year"),
sep "/")
hat_obs_tidy %>%
unite(date,
c("day", "month", "year"),
sep "-")
hat_obs_tidy %>%
unite(date,
c("day", "month", "year"),
sep = "/")
hat_obs_tidy <- hat_obs_tidy %>%
unite(date,
c("day", "month", "year"),
sep = "/")
hat_obs_tidy
hat_obs_tidy %>%
pivot_wider(names_from = "hat_type",
values_from = "date")
hat_obs_tidy %>%
pivot_wider(names_from = "date",
values_from = "hat_type")
hat_obs_tidy %>%
pivot_wider(names_from = "hat_type",
values_from = "date")
hat_obs_tidy %>%
filter(hat_type == "beret")
hat_obs_tidy %>%
filter(hat_type == "beret") %>%
arrange(observation_count)
hat_obs_tidy %>%
filter(hat_type == "beret") %>%
arrange(desc(observation_count))
view(cards)
view(customers)
view(frauds)
view(transactions)
view(cards)
view(customers)
view(frauds)
view(transactions)
semi_join(fraud, transaction, by = "transaction_id")
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
semi_join(frauds, transactions, by = "transaction_id")
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- semi_join(frauds, transactions, by = "transaction_id")
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
#big_dataset <-
inner_join(cards, transactions, by = c("card_number" = "credit_card_id"))
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- inner_join(cards, transactions, by = c("card_number" = "credit_card_id"))
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- inner_join(cards, transactions, by = c("card_number" = "credit_card_id"))
view(big_dataset)
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- full_join(cards, transactions, by = c("card_number" = "credit_card_id"))
view(big_dataset)
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- inner_join(cards, transactions, by = c("card_number" = "credit_card_id"))
view(big_dataset)
big_dataset <- inner_join(big_dataset, customers, by = "cust_id")
semi_join(frauds, big_dataset, by = "transaction_id")
#view(cards)
#view(customers)
#view(frauds)
#view(transactions)
big_dataset <- full_join(cards, transactions, by = c("card_number" = "credit_card_id"))
view(big_dataset)
big_dataset <- full_join(big_dataset, customers, by = "cust_id")
semi_join(frauds, big_dataset, by = "transaction_id")
exams <- read_csv("data/exam_scores.csv")
view(exams)
pivot_longer(cols = -id,
names_to = "exam"
values_to = "score"
pivot_longer(cols = -id,
names_to = "exam",
values_to = "score"
)
pivot_longer(cols = starts_with("e"),
names_to = "exam",
values_to = "score"
)
library(tidyverse)
hat_observations <- read_csv("data/hat_observations.csv")
view(hat_observations)
hat_obs_tidy <- hat_observations %>%
separate(observation,
c("hat_colour", "hat_type"),
sep =",")
hat_obs_tidy
hat_obs_tidy <- hat_obs_tidy %>%
unite(date,
c("day", "month", "year"),
sep = "/")
hat_obs_tidy
hat_obs_tidy %>%
filter(hat_type == "beret") %>%
group_by(date) %>%
summarise(total = sum(observation_count)) %>%
slice_max(total)
exams <- read.csv("data/exam_scores.csv")
pivot_longer(starts_with("e"),
names_to = "exam",
values_to = "score"
)
pivot_longer(exam_Q1:examQ10,
names_to = "exam",
values_to = "score"
)
exams <- read.csv("data/exam_scores.csv")
exams %>%
pivot_longer(exam_Q1:examQ10,
names_to = "exam",
values_to = "score"
)
exams <- read.csv("data/exam_scores.csv")
view(exams)
exams %>%
pivot_longer(exam_Q1:exam_Q10,
names_to = "exam",
values_to = "score"
)
exams %>%
pivot_longer(starts_with("e"),
names_to = "exam",
values_to = "score"
)
