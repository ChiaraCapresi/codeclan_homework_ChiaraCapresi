library(shiny)
library(tidyverse)


nyc_dogs <- read_csv("data/nyc_dogs.csv")

all_gender <- nyc_dogs %>% 
  distinct(gender) %>% 
  pull()

all_colours <- nyc_dogs %>% 
  distinct(colour) %>% 
  pull()


all_borough <- nyc_dogs %>% 
  distinct(borough) %>% 
  pull()


all_breeds <- nyc_dogs %>% 
  distinct(breed) %>% 
  pull()



ui <- fluidPage(
  
  
  fluidRow(
    
    column(width = 3,
           radioButtons("gender_input",
                        tags$i("Which gender?"),
                        choices = all_gender)
    ),
    
    
    column(width = 3,
           selectInput("colour_input",
                       tags$i("Choose a colour"),
                       choices = all_colours)
           ),
    
    column(width = 3,
           selectInput("borough_input",
                       tags$i("Choose borough"),
                       choices = all_borough)
           ),
    
    
    column(width = 3,
           selectInput("breed_input",
                       tags$i("Choose breed"),
                       choices = all_breeds)
           )
    
    
    
  ),
  
  
  actionButton(inputId = "update",
               label = "Update dashboard"),
  
  HTML("<br><br><br>"),
  
  
  fluidRow(
    
    DT::dataTableOutput("table_output")
    
  )
  
  
  
  
  
)




server <- function(input, output){
  
  
  
  filtered_data <- eventReactive(
    eventExpr = input$update,
    {
      nyc_dogs %>% 
        filter(gender == input$gender_input) %>% 
        filter(colour == input$colour_input) %>% 
        filter(borough == input$borough_input) %>% 
        filter(breed == input$breed_input)
      
    })
  
  
  #simplify table output code
  
  output$table_output <- DT::renderDataTable({
    filtered_data()
  })
  
  
  
  
}




shinyApp(ui = ui, server = server)